/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { LessonContentCreateNestedManyWithoutCoursesInput } from "./LessonContentCreateNestedManyWithoutCoursesInput";
import { Type } from "class-transformer";
import { UserProgressCreateNestedManyWithoutCoursesInput } from "./UserProgressCreateNestedManyWithoutCoursesInput";

@InputType()
class CourseCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  category?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  icon?: string | null;

  @ApiProperty({
    required: false,
    type: () => LessonContentCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => LessonContentCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => LessonContentCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  lessonContents?: LessonContentCreateNestedManyWithoutCoursesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserProgressCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => UserProgressCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => UserProgressCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  userProgresses?: UserProgressCreateNestedManyWithoutCoursesInput;
}

export { CourseCreateInput as CourseCreateInput };
