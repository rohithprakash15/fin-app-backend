/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LessonContent as PrismaLessonContent,
  Course as PrismaCourse,
} from "@prisma/client";

export class LessonContentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LessonContentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.lessonContent.count(args);
  }

  async lessonContents(
    args: Prisma.LessonContentFindManyArgs
  ): Promise<PrismaLessonContent[]> {
    return this.prisma.lessonContent.findMany(args);
  }
  async lessonContent(
    args: Prisma.LessonContentFindUniqueArgs
  ): Promise<PrismaLessonContent | null> {
    return this.prisma.lessonContent.findUnique(args);
  }
  async createLessonContent(
    args: Prisma.LessonContentCreateArgs
  ): Promise<PrismaLessonContent> {
    return this.prisma.lessonContent.create(args);
  }
  async updateLessonContent(
    args: Prisma.LessonContentUpdateArgs
  ): Promise<PrismaLessonContent> {
    return this.prisma.lessonContent.update(args);
  }
  async deleteLessonContent(
    args: Prisma.LessonContentDeleteArgs
  ): Promise<PrismaLessonContent> {
    return this.prisma.lessonContent.delete(args);
  }

  async getCourse(parentId: string): Promise<PrismaCourse | null> {
    return this.prisma.lessonContent
      .findUnique({
        where: { id: parentId },
      })
      .course();
  }
}
