/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentCreateNestedManyWithoutUsersInput } from "./CommentCreateNestedManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { DiscussionCreateNestedManyWithoutUsersInput } from "./DiscussionCreateNestedManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { SchemeApplicationCreateNestedManyWithoutUsersInput } from "./SchemeApplicationCreateNestedManyWithoutUsersInput";
import { UserProgressCreateNestedManyWithoutUsersInput } from "./UserProgressCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  comments?: CommentCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DiscussionCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DiscussionCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DiscussionCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  discussions?: DiscussionCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => SchemeApplicationCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => SchemeApplicationCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => SchemeApplicationCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  schemeApplications?: SchemeApplicationCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserProgressCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserProgressCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserProgressCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  userProgresses?: UserProgressCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}

export { UserCreateInput as UserCreateInput };
